@page "/registration"
@using System.Text.RegularExpressions;
@using System.Net.Mail;
@inject NavigationManager NavigationManager
@inject ILocalStorageService localStorage
@inject ISnackbar SnackbarService

<PageTitle>Registrace do SpaceNavigate</PageTitle>
<Logo />
<MudContainer Class="space-navigate-container">
    <MudText Class="space-navigate-caption">Registrace účtu</MudText>
    <MudText Class="space-navigate-text">Pro pokračování na nastavení hesla je potřeba úvést Vaše jméno a Vaší e-mailovou adresu.</MudText>
    <MudTextField Class="space-navigate-text-field mt-7" @bind-Value="@fullName" Label="Celé jméno" InputType="InputType.Text" Variant="Variant.Outlined" Required RequiredError="Vyplnění jména je pro registraci povinné." Error="IsFullNameValid" />
     <MudTextField Class="space-navigate-text-field mt-5" @bind-Value="@email" Label="E-mailová adresa" InputType="InputType.Email" Variant="Variant.Outlined" Required RequiredError="Vyplnění e-mailové adresy je pro registraci povinné." Error="IsEmailValid" />

     <MudButton OnClick="CheckEmail" Variant="Variant.Filled" DisableElevation Class="space-navigate-btn mt-10">Pokračovat</MudButton>
     <MudText Class="mt-5">
         Máte již účet ? <MudButton Variant="Variant.Text" OnClick="LoadLoginPage" Color="Color.Primary">Přejít na přihlášení</MudButton>
     </MudText>
 </MudContainer>

 @code {
    string email = "";
    string fullName = "";
    bool IsEmailValid = false;
    bool IsFullNameValid = false;
    public IMask emailMask = RegexMask.Email();

    async Task CheckEmail()
    {
        IsEmailValid = true;
        IsFullNameValid = true;

        if (string.IsNullOrEmpty(email))
        {
            IsEmailValid = false;
            return;
        }

        if (string.IsNullOrEmpty(fullName))
        {
            IsFullNameValid = false;
            return;
        }

        if (!new Regex(@"^[a-zA-Z].*[\s\.]*$").IsMatch(fullName))
            IsFullNameValid = false;

        if (!ValidateEmail(email))
            IsEmailValid = false ;

        if (!IsEmailValid || !IsFullNameValid )
            return;

        await localStorage.SetItemAsStringAsync("email", email);
        await localStorage.SetItemAsStringAsync("fullName", fullName);

        try
        {
            //send request to API
        }
        catch
        {
            SnackbarService.Add("Něco se nepovedlo", Severity.Error);
        }

        NavigationManager.NavigateTo("/registration/password");
    }

    private bool ValidateEmail(string email)
    {
        try
        {
            MailAddress m = new MailAddress(email);

            return true;
        }
        catch (FormatException)
        {
            return false;
        }
    }

    private void LoadLoginPage()
    {
        NavigationManager.NavigateTo("/");
    }
}